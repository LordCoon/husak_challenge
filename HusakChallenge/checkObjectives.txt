include("include/SOVIETInstructions.txt");
include("include/definitions.txt");

defineArray(string[8], objectives_1_text);
defineArray(string[2], objectives_2_text);
defineArray(string[3], objectives_3_text);
defineArray(string[4], objectives_4_text);
defineArray(string[5], objectives_5_text);


defineArray(char[37], success);
defineArray(char[8], completed);

defineVariable(Resources, resource);
defineVariable(vec3, _vector);


defineFunction(RunCheckObjectives, void)
{
	InitConstants();
	// Initialize objectives

	Objectives_CreateNewString("ore", "Ore and Raw minerals");
	AddExportObjective(0, 0, "ore", 100000.0, "rawbauxite");
	AddExportObjective(1, 1, "ore", 100000.0, "wood");
	AddExportObjective(2, 2, "ore", 100000.0, "rawgravel");
	AddExportObjective(3, 3, "ore", 100000.0, "plants");
	AddExportObjective(4, 4, "ore", 100000.0, "oil");
	AddExportObjective(5, 5, "ore", 100000.0, "rawcoal");
	AddExportObjective(6, 6, "ore", 100000.0, "rawiron");
	AddExportObjective(7, 7, "ore", 100000.0, "uranium");

	Objectives_CreateNewString("primaryproducts", "Primary products");
	AddExportObjective(8, 0, "primaryproducts", 25000.0, "alcohol");
	AddExportObjective(9, 1, "primaryproducts", 50000.0, "bauxite");
	AddExportObjective(10, 2, "primaryproducts", 25000.0, "bitumen");
	AddExportObjective(11, 3, "primaryproducts", 100000.0, "bricks");
	AddExportObjective(12, 4, "primaryproducts", 100000.0, "boards");
	AddExportObjective(13, 5, "primaryproducts", 50000.0, "livestock");
	AddExportObjective(14, 6, "primaryproducts", 50000.0, "food");
	AddExportObjective(15, 7, "primaryproducts", 25000.0, "fabric");
	AddExportObjective(16, 8, "primaryproducts", 25000.0, "fuel");
	AddExportObjective(17, 9, "primaryproducts", 50000.0, "gravel");
	AddExportObjective(18, 10, "primaryproducts", 50000.0, "coal");
	AddExportObjective(19, 11, "primaryproducts", 50000.0, "iron");

	Objectives_CreateNewString("secondaryproducts", "Secondary products");
	AddExportObjective(20, 0, "secondaryproducts", 25000.0, "cement");
	AddExportObjective(21, 1, "secondaryproducts", 25000.0, "aluminium");
	AddExportObjective(22, 2, "secondaryproducts", 10000.0, "chemicals");
	AddExportObjective(23, 3, "secondaryproducts", 25000.0, "meat");
	AddExportObjective(24, 4, "secondaryproducts", 25000.0, "clothes");
	AddExportObjective(25, 5, "secondaryproducts", 100000.0, "steel");
	AddExportObjective(26, 6, "secondaryproducts", 5000.0, "alumina");
	AddExportObjective(27, 6, "secondaryproducts", 25000.0, "fertiliser");
	AddExportObjective(28, 8, "secondaryproducts", 100000.0, "prefabpanels");
	AddExportObjective(29, 6, "secondaryproducts", 25000.0, "fertiliser_liquid");

	Objectives_CreateNewString("advancedproducts", "Advanced products");
	AddExportObjective(30, 0, "advancedproducts", 10000.0, "ecomponents");
	AddExportObjective(31, 1, "advancedproducts", 10000.0, "eletronics");
	AddExportObjective(32, 2, "advancedproducts", 10000.0, "mcomponents");
	AddExportObjective(33, 3, "advancedproducts", 10000.0, "plastics");
	AddExportObjective(34, 3, "advancedproducts", 25000.0, "explosives");

	Objectives_CreateNewString("electricity", "Electricity");
	AddExportObjective(35, 0, "electricity", 1000000.0, "eletric");

	Objectives_CreateNewString("nuclear", "Nuclear");
	AddExportObjective(36, 0, "nuclear", 500.0, "nuclearfuel");
	AddExportObjective(37, 1, "nuclear", 100.0, "nuclearfuelburned");
	AddExportObjective(38, 2, "nuclear", 5000.0, "yellowcake");
	AddExportObjective(39, 3, "nuclear", 500.0, "uf6");


	// Update objectives
    UpdateExportObjectiveAll();

	// completed?
	// nuclear
	if(_statRecord.ExportTonsRUB.nuclearfuelburned + _statRecord.ExportTonsUSD.nuclearfuelburned > 100.0)
	{
		Objective_UpdateRequirementToTarget("nuclear", 0);
		success[0] = 1;
	}
	if(_statRecord.ExportTonsRUB.nuclearfuel + _statRecord.ExportTonsUSD.nuclearfuel > 500.0)
	{
		Objective_UpdateRequirementToTarget("nuclear", 1);
		success[1] = 1;
	}
	if(_statRecord.ExportTonsRUB.uf6 + _statRecord.ExportTonsUSD.uf6 > 500.0)
	{
		Objective_UpdateRequirementToTarget("nuclear", 2);
		success[2] = 1;
	}
	if(_statRecord.ExportTonsRUB.yellowcake + _statRecord.ExportTonsUSD.yellowcake > 5000.0)
	{
		Objective_UpdateRequirementToTarget("nuclear", 3);
		success[3] = 1;
	}
	if(_statRecord.ExportTonsRUB.uranium + _statRecord.ExportTonsUSD.uranium > 5000.0)
	{
		Objective_UpdateRequirementToTarget("nuclear", 4);
		success[4] = 1;
	}
	
	if(success[0] + success[1] + success[2] + success[3] + success[4] ? 5)
	{
		Objective_SetComplete("nuclear");
		completed[0] = 1;
	}
	
	//metalurgy
	if(_statRecord.ExportTonsRUB.rawbauxite + _statRecord.ExportTonsUSD.rawbauxite > 100000.0)
	{
		Objective_UpdateRequirementToTarget("metalurgy", 0);
		success[5] = 1;
	}
	if(_statRecord.ExportTonsRUB.bauxite + _statRecord.ExportTonsUSD.bauxite > 50000.0)
	{
		Objective_UpdateRequirementToTarget("metalurgy", 1);
		success[6] = 1;
	}
	if(_statRecord.ExportTonsRUB.alumina + _statRecord.ExportTonsUSD.alumina > 5000.0)
	{
		Objective_UpdateRequirementToTarget("metalurgy", 2);
		success[7] = 1;
	}
	if(_statRecord.ExportTonsRUB.aluminium + _statRecord.ExportTonsUSD.aluminium > 25000.0)
	{
		Objective_UpdateRequirementToTarget("metalurgy", 3);
		success[8] = 1;
	}
	if(_statRecord.ExportTonsRUB.rawiron + _statRecord.ExportTonsUSD.rawiron > 100000.0)
	{
		Objective_UpdateRequirementToTarget("metalurgy", 4);
		success[9] = 1;
	}
	if(_statRecord.ExportTonsRUB.iron + _statRecord.ExportTonsUSD.iron > 100000.0)
	{
		Objective_UpdateRequirementToTarget("metalurgy", 5);
		success[10] = 1;
	}
	if(_statRecord.ExportTonsRUB.steel + _statRecord.ExportTonsUSD.steel > 100000.0)
	{
		Objective_UpdateRequirementToTarget("metalurgy", 6);
		success[11] = 1;
	}
	if(success[5] + success[6] + success[7] + success[8] + success[9] + success[10] + success[11] ? 7)
	{
		Objective_SetComplete("metalurgy");
		completed[1] = 1;
	}
	
	//goods
	if(_statRecord.ExportTonsRUB.clothes + _statRecord.ExportTonsUSD.clothes > 5000.0)
	{
		Objective_UpdateRequirementToTarget("goods", 0);
		success[12] = 1;
	}
	if(_statRecord.ExportTonsRUB.eletronics + _statRecord.ExportTonsUSD.eletronics > 10000.0)
	{
		Objective_UpdateRequirementToTarget("goods", 1);
		success[13] = 1;
	}
	if(success[12] + success[13] ? 2)
	{
		Objective_SetComplete("goods");
		completed[2] = 1;
	}
	//intermediate
	if(_statRecord.ExportTonsRUB.ecomponents + _statRecord.ExportTonsUSD.ecomponents > 10000.0)
	{
		Objective_UpdateRequirementToTarget("intermediate", 0);
		success[14] = 1;
	}
	if(_statRecord.ExportTonsRUB.fabric + _statRecord.ExportTonsUSD.fabric > 10000.0)
	{
		Objective_UpdateRequirementToTarget("intermediate", 1);
		success[15] = 1;
	}
	if(_statRecord.ExportTonsRUB.mcomponents + _statRecord.ExportTonsUSD.mcomponents > 10000.0)
	{
		Objective_UpdateRequirementToTarget("intermediate", 2);
		success[16] = 1;
	}
	if(success[14] + success[15] + success[16] ? 3)
	{
		Objective_SetComplete("intermediate");
		completed[3] = 1;
	}
	//petrochemical
	if(_statRecord.ExportTonsRUB.chemicals + _statRecord.ExportTonsUSD.chemicals > 10000.0)
	{
		Objective_UpdateRequirementToTarget("petrochemical", 0);
		success[17] = 1;
	}
	if(_statRecord.ExportTonsRUB.bitumen + _statRecord.ExportTonsUSD.bitumen > 25000.0)
	{
		Objective_UpdateRequirementToTarget("petrochemical", 1);
		success[18] = 1;
	}
	if(_statRecord.ExportTonsRUB.oil + _statRecord.ExportTonsUSD.oil > 50000.0)
	{
		Objective_UpdateRequirementToTarget("petrochemical", 2);
		success[19] = 1;
	}
	if(_statRecord.ExportTonsRUB.fuel + _statRecord.ExportTonsUSD.fuel > 25000.0)
	{
		Objective_UpdateRequirementToTarget("petrochemical", 3);
		success[20] = 1;
	}
	if(_statRecord.ExportTonsRUB.plastics + _statRecord.ExportTonsUSD.plastics > 25000.0)
	{
		Objective_UpdateRequirementToTarget("petrochemical", 4);
		success[21] = 1;
	}
	if(success[17] + success[18] + success[19] + success[20] + success[21] ? 5)
	{
		Objective_SetComplete("petrochemical");
		completed[4] = 1;
	}
	//plastics
	//energy
	if( _statRecord.ExportTonsRUB.rawcoal + _statRecord.ExportTonsUSD.rawcoal > 100000.0)
	{
		Objective_UpdateRequirementToTarget("energy", 0);
		success[22] = 1;
	}
	if(_statRecord.ExportTonsRUB.coal + _statRecord.ExportTonsUSD.coal > 50000.0)
	{
		Objective_UpdateRequirementToTarget("energy", 1);
		success[23] = 1;
	}
	if(_statRecord.ExportTonsRUB.eletric + _statRecord.ExportTonsUSD.eletric > 1000000.0)
	{
		Objective_UpdateRequirementToTarget("energy", 2);
		success[24] = 1;
	}
	if(success[22] + success[23] + success[24] ? 3)
	{
		Objective_SetComplete("energy");
		completed[5] = 1;
	}
	//agriculture
	if(_statRecord.ExportTonsRUB.alcohol + _statRecord.ExportTonsUSD.alcohol > 25000.0)
	{
		Objective_UpdateRequirementToTarget("agriculture", 0);
		success[25] = 1;
	}
	if(_statRecord.ExportTonsRUB.food + _statRecord.ExportTonsUSD.food > 25000.0)
	{
		Objective_UpdateRequirementToTarget("agriculture", 1);
		success[26] = 1;
	}
	if(_statRecord.ExportTonsRUB.meat + _statRecord.ExportTonsUSD.meat > 25000.0)
	{
		Objective_UpdateRequirementToTarget("agriculture", 2);
		success[27] = 1;
	}
	if(_statRecord.ExportTonsRUB.livestock + _statRecord.ExportTonsUSD.livestock > 50000.0)
	{
		Objective_UpdateRequirementToTarget("agriculture", 3);
		success[28] = 1;
	}
	if(_statRecord.ExportTonsRUB.plants + _statRecord.ExportTonsUSD.plants > 100000.0)
	{
		Objective_UpdateRequirementToTarget("agriculture", 4);
		success[29] = 1;
	}
	if(success[25] + success[26] + success[27] + success[28] + success[29] ? 5)
	{
		Objective_SetComplete("agriculture");
		completed[6] = 1;
	}
	//construction
	if(_statRecord.ExportTonsRUB.cement + _statRecord.ExportTonsUSD.cement > 25000.0)
	{
		Objective_UpdateRequirementToTarget("construction", 0);
		success[30] = 1;
	}
	if(_statRecord.ExportTonsRUB.gravel + _statRecord.ExportTonsUSD.gravel > 50000.0)
	{
		Objective_UpdateRequirementToTarget("construction", 1);
		success[31] = 1;
	}
	if(_statRecord.ExportTonsRUB.boards + _statRecord.ExportTonsUSD.boards > 100000.0)
	{
		Objective_UpdateRequirementToTarget("construction", 2);
		success[32] = 1;
	}
	if(_statRecord.ExportTonsRUB.bricks + _statRecord.ExportTonsUSD.bricks > 100000.0)
	{
		Objective_UpdateRequirementToTarget("construction", 3);
		success[33] = 1;
	}
	if(_statRecord.ExportTonsRUB.prefabpanels + _statRecord.ExportTonsUSD.prefabpanels > 100000.0)
	{
		Objective_UpdateRequirementToTarget("construction", 4);
		success[34] = 1;
	}
	if(_statRecord.ExportTonsRUB.rawgravel + _statRecord.ExportTonsUSD.rawgravel > 100000.0)
	{
		Objective_UpdateRequirementToTarget("construction", 3);
		success[35] = 1;
	}
	if(_statRecord.ExportTonsRUB.wood + _statRecord.ExportTonsUSD.wood > 100000.0)
	{
		Objective_UpdateRequirementToTarget("construction", 4);
		success[36] = 1;
	}
	if(success[30] + success[31] + success[32] + success[33] + success[34] + success[35] + success[36] ? 7)
	{
		Objective_SetComplete("construction");
		completed[7] = 1;
	}
	
	// win condition
	if(completed[0] + completed[1] + completed[2] + completed[3] + completed[4] + completed[5] + completed[6] + completed[7]? 8)
	{
		Window_ShowText("You win");
		Notification_CreateNewStringPic(
		"You win!",
		"Congratulations! You beat the curse! Contact with author to get into leader board and show your year of end and screenshots.",
		"images/win.png",
		_vector);
	}
	
	Script_Sleep(20.0);
	Objectives_ClearAll();

	returnVoid();
}